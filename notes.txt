Overview of Solution
--------------------

The sold house price data is stored in a Postgres database.

The database is first populated using the ingest_data script. I only used the latest months data set however it should
work for all of them.

Pages are delivered by Django using Jinja2 templates.

The graphs themselves are rendered by the D3 javascript library.

The graphs are populated by a TSV file which is generated by a service that queries the database and is then served by
Django.

What I Would Change With More Time
----------------------------------

The ingest script should make use of the django models instead of using SQL with Postgres directly. I should also have
created separate tables for the calculated graph data to improve the performance, which could have also been populated
by the ingest script. This would be further improved with a caching solution such as Redis or similar.

Whilst the graph is OK, I feel like it could be improved a lot along with a better interface for manipulating the
data that is displayed.

I would also have liked to have used the entire data set available on the government website.

I'm currently ignoring the "Record Status" column in the monthly data file, rather than processing them correctly i.e.
updating previous values, removing them, etc.

Limitations
-----------

* The type of property text should be drawn on top of lines rather than sometimes being partially obscured
* The scale of the graph should respond better to the width and density of the data set
* Mechanism for choosing window of data should be improved, like http://bl.ocks.org/DStruths/9c042e3a6b66048b5bd4
* If a category has no values the name text floats in the top left instead of not being added
* Over large data sets the dots obscure the results and outliers also make it uneven
* Data sets with many missing values can look strange; 'basis' lines may look better than cardinal here
* Windows of data less than a year don't show the year on the x axis
* No mocking has limited test scope
* No front end tests
* Errors are not communicated to the user and instead a blank graph is displayed
